





Тексты Игры Престолов:
https://transcripts.foreverdreaming.org/viewtopic.php?f=67&t=7739




docker-compose up -d frontend
docker-compose up -d frontend
docker-compose run --rm bw-node bash



docker-compose up -d --build




https://github.com/sanman-99/vue-drf-pg-redis







ipa phonetic


https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API



https://github.com/vovancho/buzzwords/actions
https://vovancho.github.io/buzzwords/docs/
docker-compose stop
docker-compose up -d --build --remove-orphans
docker-compose logs -f --tail=50 bw-vue-ui-node
make build



629585ea8248ce24cde1b08d Фразочки
628da21fd1997f6ee32e3b52 Слова в репу


function query (data) {
  return data.cards.filter(card => card.idList === '629585ea8248ce24cde1b08d').map(card => ({name: card.name, desc: card.desc}))
}

function query (data) {
  return _.uniq(data.cards.filter(card => card.idList === '628da21fd1997f6ee32e3b52').map(card => card.name.toLowerCase())).sort()
}
function query (data) {
  const exists = [
    "make up",
    "against",
  ]

  return _.uniq(
  data.cards
    .filter(card => card.idList === '628da21fd1997f6ee32e3b52')
    .map(card => card.name.trim().toLowerCase())
    .filter(name => !exists.includes(name))
  )
  .sort()
  .map(name => ({
    name,
    transcription: '',
    translation: [],
    createdAt: new Date().toISOString().replace(/(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}).*/, '$1 $2'),
    type: 'types.SIMPLE_TYPE',
  }))
}

function query (data) {
  let curDate = new Date
  let prepared = data
    .sort(() => Math.random() - 0.5)
    .map(function (word) {
      curDate = new Date(curDate - 1000)
      word.createdAt = curDate.toISOString().replace(/(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}).*/, '$1 $2')

      return word
    })

  return _.sortBy(prepared, (word) => word.name)
}

------------------------------------------------------------------------------------------------------------------------




